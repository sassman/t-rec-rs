## references:
# cache: https://github.com/actions/cache/blob/main/examples.md#rust---cargo
# audit: https://github.com/actions-rs/audit-check
# "needs": https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idneeds

name: Release
on:
  push:
    tags: 
      - 'v[0-9]+.[0-9]+.[0-9]+'
    paths-ignore:
      - "**/docs/**"
      - "**.md"

# NOTE: needs to stay in sync with ./build.yml
jobs:
  check:
    name: check
    strategy:
      fail-fast: false
      matrix:
        version: [ 'macos-latest', 'ubuntu-latest']
    runs-on: ${{ matrix.version }}
    steps:
      - uses: actions/checkout@v2
      - name: setup | rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          profile: minimal
          components: clippy, rustfmt
      - uses: Swatinem/rust-cache@v1
      - run: cargo check

  lint:
    name: lint
    needs: check
    strategy:
      fail-fast: false
      matrix:
        version: [ 'macos-latest', 'ubuntu-latest']
        cargo-cmd:
          - fmt --all -- --check
          - clippy --all-targets --all-features -- -D warnings
    runs-on: ${{ matrix.version }}
    steps:
      - uses: actions/checkout@v2
      - name: setup | rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          profile: minimal
          components: clippy, rustfmt
      - uses: Swatinem/rust-cache@v1
      - run: cargo ${{ matrix['cargo-cmd'] }}

  tests:
    name: test
    needs: check
    strategy:
      fail-fast: false
      matrix:
#        version: [ 'macos-11.0', 'macos-10.15', 'macos-10.14', 'ubuntu-latest']
        version: [ 'macos-latest', 'ubuntu-latest']
        rust: [ nightly, stable ]
    runs-on: ${{ matrix.version }}
    continue-on-error: ${{ matrix.rust == 'nightly' }}
    steps:
      - uses: actions/checkout@v2
      - name: setup | rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          default: true
          profile: minimal
      - uses: Swatinem/rust-cache@v1
      - name: cargo test
        run: cargo test --all --locked -- -Z unstable-options

  audit:
    name: security audit
    needs: check
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: setup | rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          profile: minimal
      - uses: Swatinem/rust-cache@v1
      - name: audit
        uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
  # END of build.yml

  publish:
    name: post / cargo publish
    needs: [audit, lint, tests]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: setup | rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          profile: minimal
      - uses: Swatinem/rust-cache@v1
      - uses: katyo/publish-crates@v1
        with:
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}

  release:
    name: post / github release
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: setup | rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          profile: minimal
      - uses: Swatinem/rust-cache@v1
      - run: cargo install cargo-deb
      - name: Get version from tag
        id: tag_name
        run: echo ::set-output name=current_version::${GITHUB_REF#refs/tags/v}
        shell: bash
      - name: Get Changelog Entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2
        with:
          validation_depth: 10
          version: ${{ steps.tag_name.outputs.current_version }}
          path: ./CHANGELOG.md
      - run: cargo deb
      - name: Create Release
        # https://github.com/marketplace/actions/changelog-reader
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # This pulls from the "Get Changelog Entry" step above, referencing it's ID to get its outputs object.
          # See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.changelog_reader.outputs.version }}
          body: ${{ steps.changelog_reader.outputs.changes }}
          prerelease: ${{ steps.changelog_reader.outputs.status == 'prereleased' }}
          draft: ${{ steps.changelog_reader.outputs.status == 'unreleased' }}
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/debian/t-rec_${{ github.ref }}_amd64.deb
          asset_name: t-rec_${{ steps.tag_name.outputs.current_version }}_amd64.deb
          asset_content_type: application/vnd.debian.binary-package

  # https://github.com/mislav/bump-homebrew-formula-action
  publish-to-brew:
    name: post / homebrew
    needs: publish
    runs-on: macos-latest
    steps:
      - uses: mislav/bump-homebrew-formula-action@v1
        with:
          formula-name: t-rec
        env:
          COMMITTER_TOKEN: ${{ secrets.COMMITTER_TOKEN }}